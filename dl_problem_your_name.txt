To simplify the problem i will divide it into two subproblems, a model for each subproblem,  the first model will predict the number of year(0-9 that represent year-number of the decade), and will use 2 columns as input(leap_year_condition and decade), this output will concatenate with the decade to produce the year.


the second one will predict the day(1-31) and the input for this model will be(1- the output of the first model(year) splited into 1-century_code and century_year where century_code is the century mapped into certain values[0, 2, 4, 6] according to this website `https://artofmemory.com/blog/how-to-calculate-the-day-of-the-week/` and also the 2-year_code which is the last 2 digits of the year engineered according to the same site,3- the month column also mapped into certain values according to the exact website, 4-the week-day, and finally 5- the leap_year_condition column)
i convert days into groups where i grouped the same week-day days into the same group, as example if the day "1" is sunday, then for sure the day "8" must be sunday also, and the same for day "15" and "22" so i grouped all of them as one group and refer to this group by it's index, the same for the second group which include days[2, 9, 16, 23] and so on, the resultant groups are 10 groups covers all posibilities in all caces such that if the model produce certain group index, all numbers in that index will satisfy the same week-day for sure


